// <auto-generated />
using System;
using MeetingRoomReservation._3Data.Concrete.EntityFrameWork.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetingRoomReservation._3Data.Migrations
{
    [DbContext(typeof(MeetingRoomReservationContext))]
    [Migration("20210301112037_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.MeetingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<bool>("Computer")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonCapacity")
                        .HasColumnType("int");

                    b.Property<int>("PlaceID")
                        .HasColumnType("int");

                    b.Property<bool>("Projection")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("WebConference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceID");

                    b.ToTable("MeetingRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = 10,
                            Computer = true,
                            CreatedByName = "initial",
                            CreatedDate = new DateTime(2021, 3, 1, 14, 20, 36, 700, DateTimeKind.Local).AddTicks(3135),
                            Description = "Buyuk Salon2",
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2021, 3, 1, 14, 20, 36, 700, DateTimeKind.Local).AddTicks(3145),
                            Name = "1 nolu Salon2",
                            Note = "note",
                            PersonCapacity = 12,
                            PlaceID = 1,
                            Projection = true,
                            Status = 1,
                            WebConference = "zoom"
                        });
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "initial",
                            CreatedDate = new DateTime(2021, 3, 1, 14, 20, 36, 695, DateTimeKind.Local).AddTicks(2218),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "Initial",
                            ModifiedDate = new DateTime(2021, 3, 1, 14, 20, 36, 695, DateTimeKind.Local).AddTicks(3109),
                            Name = "TOBB AZ Yerleşkesi2",
                            Note = "Initial"
                        });
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("MeetingEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MeetingRoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingSubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MeetingType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingRoomID");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "initial",
                            CreatedDate = new DateTime(2021, 3, 1, 14, 20, 36, 702, DateTimeKind.Local).AddTicks(4353),
                            IsActive = true,
                            IsDeleted = false,
                            MeetingDescription = "Test Desc Topantisi",
                            MeetingEndTime = new DateTime(2021, 3, 1, 14, 50, 36, 702, DateTimeKind.Local).AddTicks(3138),
                            MeetingNotes = "Notlar",
                            MeetingRoomID = 1,
                            MeetingStartTime = new DateTime(2021, 3, 1, 14, 20, 36, 702, DateTimeKind.Local).AddTicks(2822),
                            MeetingSubject = "test toplanti Basliği",
                            MeetingType = 1,
                            ModifiedByName = "initial",
                            ModifiedDate = new DateTime(2021, 3, 1, 14, 20, 36, 702, DateTimeKind.Local).AddTicks(4045),
                            Note = "Not",
                            RequestUser = "fikret.erden"
                        });
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.MeetingRoom", b =>
                {
                    b.HasOne("MeetingRoomReservation._2Entities.Concrete.Place", "Place")
                        .WithMany("MeetingRooms")
                        .HasForeignKey("PlaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.Reservation", b =>
                {
                    b.HasOne("MeetingRoomReservation._2Entities.Concrete.MeetingRoom", "MeetingRoom")
                        .WithMany("Reservations")
                        .HasForeignKey("MeetingRoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingRoom");
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.MeetingRoom", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("MeetingRoomReservation._2Entities.Concrete.Place", b =>
                {
                    b.Navigation("MeetingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
